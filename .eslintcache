[{"/Users/Robert_Yeakel/Documents/GitHub/tcg/tcg_frontend/src/index.jsx":"1","/Users/Robert_Yeakel/Documents/GitHub/tcg/tcg_frontend/src/reportWebVitals.js":"2","/Users/Robert_Yeakel/Documents/GitHub/tcg/tcg_frontend/src/components/GlobalPage.jsx":"3","/Users/Robert_Yeakel/Documents/GitHub/tcg/tcg_frontend/src/pages/Home/Home.jsx":"4","/Users/Robert_Yeakel/Documents/GitHub/tcg/tcg_frontend/src/pages/Signup/Signup.jsx":"5","/Users/Robert_Yeakel/Documents/GitHub/tcg/tcg_frontend/src/utils/api/calls.js":"6","/Users/Robert_Yeakel/Documents/GitHub/tcg/tcg_frontend/src/pages/Signin/Signin.jsx":"7","/Users/Robert_Yeakel/Documents/GitHub/tcg/tcg_frontend/src/api/googleAuth.js":"8","/Users/Robert_Yeakel/Documents/GitHub/tcg/tcg_frontend/src/components/GoogleAuth.jsx":"9","/Users/Robert_Yeakel/Documents/GitHub/tcg/tcg_frontend/src/components/Button.jsx":"10","/Users/Robert_Yeakel/Documents/GitHub/tcg/tcg_frontend/src/components/Navigation.jsx":"11","/Users/Robert_Yeakel/Documents/GitHub/tcg/tcg_frontend/src/components/TradingCard.jsx":"12","/Users/Robert_Yeakel/Documents/GitHub/tcg/tcg_frontend/src/components/Heart.jsx":"13","/Users/Robert_Yeakel/Documents/GitHub/tcg/tcg_frontend/src/components/Sword.jsx":"14","/Users/Robert_Yeakel/Documents/GitHub/tcg/tcg_frontend/src/components/Mana.jsx":"15","/Users/Robert_Yeakel/Documents/GitHub/tcg/tcg_frontend/src/pages/card-library/CardLibrary.jsx":"16","/Users/Robert_Yeakel/Documents/GitHub/tcg/tcg_frontend/src/components/Gem.jsx":"17","/Users/Robert_Yeakel/Documents/GitHub/tcg/tcg_frontend/src/pages/deck-builder/DeckBuilder.jsx":"18","/Users/Robert_Yeakel/Documents/GitHub/tcg/tcg_frontend/src/pages/decks/Decks.jsx":"19","/Users/Robert_Yeakel/Documents/GitHub/tcg/tcg_frontend/src/pages/home/Home.jsx":"20"},{"size":1338,"mtime":1611033486490,"results":"21","hashOfConfig":"22"},{"size":362,"mtime":1608659481530,"results":"23","hashOfConfig":"22"},{"size":356,"mtime":1610874393494,"results":"24","hashOfConfig":"22"},{"size":337,"mtime":1610874162851,"results":"25","hashOfConfig":"22"},{"size":932,"mtime":1609566698854,"results":"26","hashOfConfig":"22"},{"size":233,"mtime":1611022543474,"results":"27","hashOfConfig":"22"},{"size":1508,"mtime":1609566695783,"results":"28","hashOfConfig":"22"},{"size":655,"mtime":1610603636398,"results":"29","hashOfConfig":"22"},{"size":851,"mtime":1610603586069,"results":"30","hashOfConfig":"22"},{"size":444,"mtime":1611028255071,"results":"31","hashOfConfig":"22"},{"size":1525,"mtime":1611019375159,"results":"32","hashOfConfig":"22"},{"size":2960,"mtime":1610957769971,"results":"33","hashOfConfig":"22"},{"size":1883,"mtime":1610957281279,"results":"34","hashOfConfig":"22"},{"size":2019,"mtime":1610957295832,"results":"35","hashOfConfig":"22"},{"size":777,"mtime":1610957188026,"results":"36","hashOfConfig":"22"},{"size":796,"mtime":1611032137412,"results":"37","hashOfConfig":"22"},{"size":3500,"mtime":1610956453931,"results":"38","hashOfConfig":"22"},{"size":8679,"mtime":1611033508443,"results":"39","hashOfConfig":"22"},{"size":5539,"mtime":1611032266123,"results":"40","hashOfConfig":"22"},{"size":337,"mtime":1610874162851,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"6pztao",{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"52"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"62"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"46"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"46"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"86","messages":"87","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"46"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/Robert_Yeakel/Documents/GitHub/tcg/tcg_frontend/src/index.jsx",[],"/Users/Robert_Yeakel/Documents/GitHub/tcg/tcg_frontend/src/reportWebVitals.js",[],["91","92"],"/Users/Robert_Yeakel/Documents/GitHub/tcg/tcg_frontend/src/components/GlobalPage.jsx",[],"/Users/Robert_Yeakel/Documents/GitHub/tcg/tcg_frontend/src/pages/Home/Home.jsx",["93"],"import React from 'react';\nimport { Navigation } from '../../components/Navigation';\n// import './home.css';\n\nexport const Home = () => {\n    return <div className='custom-styles'></div>;\n};\n\n// background: #f8ff45;\n// color: #1f1f1f;\n// margin: 300px;\n// padding: 8px 24px;\n// font-weight: 600;\n// border-radius: 5px;\n// outline: none;\n",["94","95"],"/Users/Robert_Yeakel/Documents/GitHub/tcg/tcg_frontend/src/pages/Signup/Signup.jsx",[],["96","97"],"/Users/Robert_Yeakel/Documents/GitHub/tcg/tcg_frontend/src/utils/api/calls.js",[],"/Users/Robert_Yeakel/Documents/GitHub/tcg/tcg_frontend/src/pages/Signin/Signin.jsx",[],"/Users/Robert_Yeakel/Documents/GitHub/tcg/tcg_frontend/src/api/googleAuth.js",[],["98","99"],"/Users/Robert_Yeakel/Documents/GitHub/tcg/tcg_frontend/src/components/GoogleAuth.jsx",["100"],"import React from 'react';\nimport { useGoogleLogin } from 'react-google-login';\nimport { login } from '../api/googleAuth';\nimport { Button } from './Button';\n\nexport const GoogleAuth = (props) => {\n    const responseGoogle = async (authResult) => {\n        try {\n            const token = authResult.tokenId;\n            if (token) {\n                login(token);\n            } else {\n                throw new Error(authResult);\n            }\n        } catch (e) {\n            console.log(e);\n        }\n    };\n\n    const { signIn, loaded } = useGoogleLogin({\n        clientId: '395956662139-7mfdnfk2n5nonl8pcast4q7dniueb16b.apps.googleusercontent.com',\n        onSuccess: responseGoogle,\n        onFailure: responseGoogle,\n        cookiePolicy: 'single_host_origin',\n    });\n\n    return <Button clickHandler={signIn}>Sign in with Google</Button>;\n};\n","/Users/Robert_Yeakel/Documents/GitHub/tcg/tcg_frontend/src/components/Button.jsx",[],"/Users/Robert_Yeakel/Documents/GitHub/tcg/tcg_frontend/src/components/Navigation.jsx",["101","102"],"import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { doCall } from '../utils/api/calls';\nimport { Button } from './Button';\n\nexport const Navigation = () => {\n    return (\n        <div className='container mx-auto py-3'>\n            <div className='flex justify-between items-center'>\n                <div>\n                    <ul className='flex'>\n                        <li className='p-3'>\n                            <Link to={'/card-library'}> Card Library</Link>\n                        </li>\n                        <li className='p-3'>\n                            <Link to={'/deck-builder'}> Deck Builder</Link>\n                        </li>\n                        <li className='ml-2 p-3'>\n                            <Link to={'/boosters'}>Buy Booster Packs</Link>\n                        </li>\n                        <li className='ml-2 p-3'>\n                            <Link to={'/auction'}>Player Auction House</Link>\n                        </li>\n                    </ul>\n                </div>\n                <div className='mr-3 flex'>\n                    <div className='text-gold' onClick={() => (window.location.href = 'http://localhost:5000/auth/google')}>\n                        Sign In With Google\n                    </div>\n                    <div onClick={() => (window.location.href = 'http://localhost:5000/auth/logout')} className='ml-3'>\n                        Sign Out\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n};\n","/Users/Robert_Yeakel/Documents/GitHub/tcg/tcg_frontend/src/components/TradingCard.jsx",["103","104","105","106","107","108","109","110"],"import React, { useState } from 'react';\nimport { Gem } from './Gem';\nimport { Heart } from './Heart';\nimport { Mana } from './Mana';\nimport { Sword } from './Sword';\n\nexport const TradingCard = ({ card, hoverable }) => {\n    const [baseAttack, setMaxAttack] = useState(card.attack);\n    const [attack, setAttack] = useState(card.attack);\n    const [baseHealth, setBaseHealth] = useState(card.health);\n    const [health, setHealth] = useState(card.health);\n\n    const [mana, setMana] = useState(card.mana);\n\n    let cardBGColor = '#aaaaaa';\n\n    return (\n        <div className={`no-select p-2 rounded text-white ${hoverable && 'cursor-pointer'}`} style={{ width: '250px', background: cardBGColor }}>\n            <div className='flex justify-between bg-background-primary p-2 rounded-t'>\n                <div>{card.name}</div>\n                <div className='flex items-center'>\n                    <div className='flex items-center'>\n                        <div style={{ filter: 'drop-shadow(0px 0px 3px #2890f3)' }}>\n                            <Mana />\n                        </div>\n                        <div className='ml-2 text-xl'>{mana}</div>\n                    </div>\n                </div>\n            </div>\n\n            <div>\n                <div className='relative'>\n                    <div>\n                        <img className='object-cover' style={{ width: '100%', height: '150px' }} src={'/' + card.imagePath} />\n                    </div>\n                    <div>\n                        <div className='absolute p-1 -ml-1 bg-dark-blue rounded-full' style={{ top: '100%', left: '50%', transform: 'translate(0px, -50%)' }}>\n                            <Gem rank={card.rank} />\n                        </div>\n                    </div>\n                </div>\n                <div className='w-100 bg-background-primary flex justify-between rounded-b' style={{ height: '100px' }}>\n                    <div className='p-2 pt-3 font-medium text-sm text-center'>{card.description}</div>\n                </div>\n                <div className='bg-background-primary rounded mt-2'>\n                    <div className='p-2 flex justify-between'>\n                        <div className='flex items-center'>\n                            <div style={{ filter: 'drop-shadow(0px 0px 2px #ff0)' }}>\n                                <Sword />\n                            </div>\n                            <div className='ml-2 text-xl'>{attack}</div>\n                        </div>\n                        <div>{card.model}</div>\n                        <div className='flex items-center'>\n                            <div style={{ filter: 'drop-shadow(0px 0px 3px #f00)' }}>\n                                <Heart />\n                            </div>\n                            <div className='ml-2 text-xl'>{health}</div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n};\n","/Users/Robert_Yeakel/Documents/GitHub/tcg/tcg_frontend/src/components/Heart.jsx",[],"/Users/Robert_Yeakel/Documents/GitHub/tcg/tcg_frontend/src/components/Sword.jsx",[],"/Users/Robert_Yeakel/Documents/GitHub/tcg/tcg_frontend/src/components/Mana.jsx",[],"/Users/Robert_Yeakel/Documents/GitHub/tcg/tcg_frontend/src/pages/card-library/CardLibrary.jsx",[],"/Users/Robert_Yeakel/Documents/GitHub/tcg/tcg_frontend/src/components/Gem.jsx",[],"/Users/Robert_Yeakel/Documents/GitHub/tcg/tcg_frontend/src/pages/deck-builder/DeckBuilder.jsx",["111","112","113"],"/Users/Robert_Yeakel/Documents/GitHub/tcg/tcg_frontend/src/pages/decks/Decks.jsx",["114"],"import React, { useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Button } from '../../components/Button';\nimport { TradingCard } from '../../components/TradingCard';\nimport { doCall } from '../../utils/api/calls';\n\nexport const DeckBuilder = () => {\n    const [decks, setDecks] = useState([]);\n    const [isLoaded, setIsLoaded] = useState(false);\n\n    useEffect(() => {\n        doCall('http://localhost:5000/decks').then((res) => {\n            setDecks([res.data.data[0], res.data.data[0]]);\n            setIsLoaded(true);\n        });\n        return () => {};\n    }, []);\n\n    return (\n        // <div>\n        //     {isLoaded ? (\n        //         <div className='flex justify-center'>\n        //             <div className='bg-medium-blue rounded p-5 inline-block'>\n        //                 <div className='flex flex-col items-center'>\n        //                     {decks.length === 0 ? (\n        //                         <div>\n        //                             <h1 className='text-3xl'>You do not have any decks created yet.</h1>\n        //                         </div>\n\n        //                     ) : (\n        //                         <div>\n        //                             <div>\n        //                                 <h1 className=''>Your Decks</h1>\n        //                             </div>\n\n        //                             <div className='mt-5'>\n        //                                 <Link to='deck-builder/create'>\n        //                                     <Button>Create a New Deck</Button>\n        //                                 </Link>\n        //                                 <div className='flex flex-wrap justify-center'>\n        //                                     {/* {cards.map((card) => {\n        //                     return (\n        //                         <div key={card._id} className='m-3'>\n        //                         <TradingCard card={card} />\n        //                         </div>\n        //                         );\n        //                     })} */}\n        //                                 </div>\n        //                             </div>\n        //                         </div>\n        //                     )}\n\n        //     ) : (\n        //         <div></div>\n        //     )}\n        // </div>\n        <div>\n            {isLoaded ? (\n                <div>\n                    {decks.length === 0 ? (\n                        <div className='flex justify-center'>\n                            <div className='bg-medium-blue rounded p-5 inline-block'>\n                                <div className='flex flex-col items-center'>\n                                    <div>\n                                        <h1 className='text-3xl'>You do not have any decks created yet.</h1>\n                                    </div>\n                                    <div className='mt-5'>\n                                        <Link to='deck-builder/create'>\n                                            <Button>Create a New Deck</Button>\n                                        </Link>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    ) : (\n                        <div>\n                            <div className='flex'>\n                                <div className='ml-3 w-1/4'>\n                                    <div className='w-full bg-medium-blue rounded p-5 inline-block'>\n                                        <div className='flex flex-col items-center'>\n                                            <div className='text-xl text-center'>Create a new deck from scratch</div>\n                                            <div className='mt-5'>\n                                                <Link to='deck-builder/create'>\n                                                    <Button>Create Deck</Button>\n                                                </Link>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                                {decks.map((deck) => (\n                                    <div className='ml-3 w-1/4'>\n                                        <div className='w-full bg-medium-blue rounded p-5 inline-block h-full'>\n                                            <div className='flex flex-col items-center justify-between h-full'>\n                                                <div className='text-xl' key={deck._id}>\n                                                    {deck.name}\n                                                </div>\n                                                <div className='mt-5 text-gold'>\n                                                    <Link to={`deck-builder/${deck._id}`}>\n                                                        <Button type={'secondary'}>Edit Deck</Button>\n                                                    </Link>\n                                                </div>\n                                            </div>\n                                        </div>\n                                    </div>\n                                ))}\n                            </div>\n                        </div>\n                    )}\n                </div>\n            ) : (\n                <div></div>\n            )}\n        </div>\n    );\n};\n","/Users/Robert_Yeakel/Documents/GitHub/tcg/tcg_frontend/src/pages/home/Home.jsx",["115"],{"ruleId":"116","replacedBy":"117"},{"ruleId":"118","replacedBy":"119"},{"ruleId":"120","severity":1,"message":"121","line":2,"column":10,"nodeType":"122","messageId":"123","endLine":2,"endColumn":20},{"ruleId":"116","replacedBy":"124"},{"ruleId":"118","replacedBy":"125"},{"ruleId":"116","replacedBy":"126"},{"ruleId":"118","replacedBy":"127"},{"ruleId":"116","replacedBy":"128"},{"ruleId":"118","replacedBy":"129"},{"ruleId":"120","severity":1,"message":"130","line":20,"column":21,"nodeType":"122","messageId":"123","endLine":20,"endColumn":27},{"ruleId":"120","severity":1,"message":"131","line":3,"column":10,"nodeType":"122","messageId":"123","endLine":3,"endColumn":16},{"ruleId":"120","severity":1,"message":"132","line":4,"column":10,"nodeType":"122","messageId":"123","endLine":4,"endColumn":16},{"ruleId":"120","severity":1,"message":"133","line":8,"column":12,"nodeType":"122","messageId":"123","endLine":8,"endColumn":22},{"ruleId":"120","severity":1,"message":"134","line":8,"column":24,"nodeType":"122","messageId":"123","endLine":8,"endColumn":36},{"ruleId":"120","severity":1,"message":"135","line":9,"column":20,"nodeType":"122","messageId":"123","endLine":9,"endColumn":29},{"ruleId":"120","severity":1,"message":"136","line":10,"column":12,"nodeType":"122","messageId":"123","endLine":10,"endColumn":22},{"ruleId":"120","severity":1,"message":"137","line":10,"column":24,"nodeType":"122","messageId":"123","endLine":10,"endColumn":37},{"ruleId":"120","severity":1,"message":"138","line":11,"column":20,"nodeType":"122","messageId":"123","endLine":11,"endColumn":29},{"ruleId":"120","severity":1,"message":"139","line":13,"column":18,"nodeType":"122","messageId":"123","endLine":13,"endColumn":25},{"ruleId":"140","severity":1,"message":"141","line":34,"column":25,"nodeType":"142","endLine":34,"endColumn":127},{"ruleId":"143","severity":1,"message":"144","line":35,"column":8,"nodeType":"145","endLine":35,"endColumn":10,"suggestions":"146"},{"ruleId":"140","severity":1,"message":"141","line":117,"column":45,"nodeType":"142","endLine":121,"endColumn":47},{"ruleId":"147","severity":1,"message":"148","line":120,"column":102,"nodeType":"149","messageId":"150","endLine":120,"endColumn":103},{"ruleId":"120","severity":1,"message":"151","line":4,"column":10,"nodeType":"122","messageId":"123","endLine":4,"endColumn":21},{"ruleId":"120","severity":1,"message":"121","line":2,"column":10,"nodeType":"122","messageId":"123","endLine":2,"endColumn":20},"no-native-reassign",["152"],"no-negated-in-lhs",["153"],"no-unused-vars","'Navigation' is defined but never used.","Identifier","unusedVar",["152"],["153"],["152"],["153"],["152"],["153"],"'loaded' is assigned a value but never used.","'doCall' is defined but never used.","'Button' is defined but never used.","'baseAttack' is assigned a value but never used.","'setMaxAttack' is assigned a value but never used.","'setAttack' is assigned a value but never used.","'baseHealth' is assigned a value but never used.","'setBaseHealth' is assigned a value but never used.","'setHealth' is assigned a value but never used.","'setMana' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.","ArrayExpression",["154"],"no-useless-concat","Unexpected string concatenation of literals.","BinaryExpression","unexpectedConcat","'TradingCard' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"155","fix":"156"},"Update the dependencies array to be: [id]",{"range":"157","text":"158"},[1315,1317],"[id]"]